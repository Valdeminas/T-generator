@using Microsoft.AspNetCore.Identity
@using T_generator.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@model ModifyViewModel
@{
    ViewData["Title"] = "Modify existing user";
}
<h2>@ViewData["Title"].</h2>
<form asp-controller="Account" asp-action="Modify" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
    <hr />
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="Name" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="Name" class="form-control" readonly/>
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group">
    <label asp-for="Email" class="col-md-2 control-label"></label>
    <div class="col-md-10">
        <input asp-for="Email" class="form-control" readonly />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <div class="checkbox">
                <label asp-for="MakeAdmin">
                    <input asp-for="MakeAdmin" />
                    @Html.DisplayNameFor(m => m.MakeAdmin)
                </label>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-default">Modify</button>
        </div>
    </div>
</form>

<div>
    <a asp-action="Users">Back to List</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
