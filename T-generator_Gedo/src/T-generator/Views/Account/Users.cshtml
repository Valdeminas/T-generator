@using Microsoft.AspNetCore.Identity
@using T_generator.Models
@using T_generator.Data
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@model IEnumerable<T_generator.Models.ApplicationUser>
@{
    ViewData["Title"] = "Users";
}
@{
    var currentUser = UserManager.GetUserAsync(User).Result;
}

<h2>@ViewData["Title"]</h2>
<h3>@ViewData["Message"]</h3>

<p>
    <a asp-action="Register">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                Is Admin
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
            {
            @if (!item.IsPowerAdmin)
                {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @(item.IsAdmin ? "Yes" : "No")
                    </td>
                    @if (currentUser.IsPowerAdmin ||
                        (currentUser.IsAdmin && !item.IsAdmin))
                        {
                        <td>
                            <a asp-action="ResetPassword" asp-route-userName="@item.UserName">Reset Password</a> |
                            <a asp-action="Modify" asp-route-userName="@item.UserName">Edit</a> |
                            <a asp-action="Delete" asp-route-userName="@item.UserName">Delete</a>
                        </td>
                        }
                </tr>
                }
            }
    </tbody>
</table>


